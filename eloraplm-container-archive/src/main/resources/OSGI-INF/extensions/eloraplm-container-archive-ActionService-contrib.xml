<?xml version="1.0" encoding="UTF-8"?>

<component name="com.aritu.eloraplm.container.archive.ActionService.contrib">
  
  <extension target="org.nuxeo.ecm.platform.actions.ActionService" point="actions">
  
    <action id="archiveWorkspaceAction" order="0" label="eloraplm.command.archive.workspace" type="link"
            confirm="if(!confirmArchiveWS()) return false;" link="#{archiveWorkspaceAction.archiveWorkspace}" 
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivableWorkspace">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'Workspace'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="archiveEcoAction" order="0" label="eloraplm.command.archive.eco" type="link"
            confirm="if(!confirmArchiveECO()) return false;" link="#{archiveEcoAction.archiveECO}" 
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivableEco">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'CmEco'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="archiveHomAction" order="0" label="eloraplm.command.archive.homologation" type="link"
            confirm="if(!confirmArchiveContainer()) return false;" link="#{archiveContainerAction.archiveHOM}"
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivableHom">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'CmHom'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="archiveCommAction" order="0" label="eloraplm.command.archive.commercialized" type="link"
            confirm="if(!confirmArchiveContainer()) return false;" link="#{archiveContainerAction.archiveCOMM}"
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivableComm">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'CmComm'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="archivePreAction" order="0" label="eloraplm.command.archive.preserie" type="link"
            confirm="if(!confirmArchiveContainer()) return false;" link="#{archiveContainerAction.archivePRE}"
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivablePre">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'CmPre'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="archiveSampleAction" order="0" label="eloraplm.command.archive.sample" type="link"
            confirm="if(!confirmArchiveContainer()) return false;" link="#{archiveContainerAction.archiveSAMPLE}"
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivableSample">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'CmSample'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="archiveProjectAction" order="0" label="eloraplm.command.archive.project" type="link"
            confirm="if(!confirmArchiveContainer()) return false;" link="#{archiveContainerAction.archiveProject}"
            icon="/icons/action_archive_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isArchivableProject">
          <rule grant="false">
            <filter-id>cannot_write</filter-id>
            <condition>#{currentDocument.isLocked() and currentDocument.lockInfo.owner ne currentUser}</condition>
            <condition>#{currentDocument.type ne 'Project'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'WorkspaceRoot'}</condition>
          </rule>
      </filter>
    </action>
    
    <!-- Activate actions -->
    
    <action id="activateWorkspaceAction" order="0" label="eloraplm.command.activate.workspace" type="link"
            confirm="if(!confirmActivateWS()) return false;" link="#{archiveWorkspaceAction.activateWorkspace}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorableWorkspace">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'Workspace'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'StructArchivedWS'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="activateEcoAction" order="0" label="eloraplm.command.activate.eco" type="link"
            confirm="if(!confirmActivateECO()) return false;" link="#{archiveEcoAction.activateEco}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorableEco">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'CmEco'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'FolderChangeManagementECO'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="activateHomAction" order="0" label="eloraplm.command.activate.homologation" type="link"
            confirm="if(!confirmActivateContainer()) return false;" link="#{archiveContainerAction.activateContainer}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorableHom">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'CmHom'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'FolderChangeManagementHOM'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="activateCommAction" order="0" label="eloraplm.command.activate.commercialized" type="link"
            confirm="if(!confirmActivateContainer()) return false;" link="#{archiveContainerAction.activateContainer}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorableComm">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'CmComm'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'FolderChangeManagementCOMM'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="activatePreAction" order="0" label="eloraplm.command.activate.preserie" type="link"
            confirm="if(!confirmActivateContainer()) return false;" link="#{archiveContainerAction.activateContainer}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorablePre">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'CmPre'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'FolderChangeManagementPRE'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="activateSampleAction" order="0" label="eloraplm.command.activate.sample" type="link"
            confirm="if(!confirmActivateContainer()) return false;" link="#{archiveContainerAction.activateContainer}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorableSample">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'CmSample'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'FolderChangeManagementSAMPLE'}</condition>
          </rule>
      </filter>
    </action>
    
    <action id="activateProjectAction" order="0" label="eloraplm.command.activate.project" type="link"
            confirm="if(!confirmActivateContainer()) return false;" link="#{archiveContainerAction.activateContainer}"
            icon="/icons/action_activate_16.png">
      <category>DOCUMENT_UPPER_ACTION</category>
      <filter id="isRestorableProject">
          <rule grant="false">
            <condition>#{currentDocument.type ne 'Project'}</condition>
            <condition>#{documentManager.getDocument(currentDocument.getParentRef()).type ne 'StructProject'}</condition>
          </rule>
      </filter>
    </action>
    
  </extension>

</component>